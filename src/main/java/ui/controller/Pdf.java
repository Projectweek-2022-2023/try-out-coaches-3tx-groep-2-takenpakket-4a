package ui.controller;



import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.util.Date;
import domain.model.DomainException;

public class Pdf extends RequestHandler {
    @Override
    public String handleRequest(HttpServletRequest request, HttpServletResponse response) {
        String pdfPath = request.getServletContext().getRealPath("WEB-INF/createPDF.pdf");
        String imgPath = request.getServletContext().getRealPath("WEB-INF/friday.jpg");
        request.setAttribute("pdfPath", pdfPath);
        System.out.println(pdfPath);
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(pdfPath));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            addContent(document);
            addImage(document,imgPath);
            document.close();
        }
        catch (Exception e){
            throw new DomainException(e+" error bij createPDF");
        }

        return "PDF.jsp";
    }
    private static void addMetaData(com.itextpdf.text.Document document) throws DocumentException {
        document.addTitle("My first PDF");
        document.addSubject("Projectweek");
        document.addKeywords("UCLL,PDF,iText");
        document.addAuthor("Seppe Van Vaerenbergh");
        document.addCreator("Seppe Van Vaerenbergh");
    }
    private static void addTitlePage(com.itextpdf.text.Document document) throws DocumentException {
        Paragraph preface = new Paragraph();
        addEmptyLine(preface,1);
        preface.add(new Paragraph("Test titel document"));
        addEmptyLine(preface,1);
        preface.add(new Paragraph("Report generated by: "+ System.getProperty("user.name")+", "+ new Date()));
        addEmptyLine(preface,3);
        preface.add(new Paragraph("Hello there. -General kenobi, you're a bold one ... I will deal with this jedi slime myself."));
        addEmptyLine(preface,8);
        preface.add(new Paragraph("this is a test sentence"));
        document.add(preface);
        document.newPage();
    }

    private static void addContent(com.itextpdf.text.Document document) throws DocumentException{
        Anchor anchor = new Anchor("First Chapter");
        anchor.setName("First Chapter");
        Chapter catPart = new Chapter(new Paragraph(anchor),1);
        Paragraph subPara = new Paragraph("Subcategory 1");
        Section subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Hello there"));
        subPara = new Paragraph("Subcategory 2");
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Paragraph 1"));
        subCatPart.add(new Paragraph("Paragraph 2"));
        subCatPart.add(new Paragraph("Paragraph 3"));

        createList(subCatPart);
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph,5);
        subCatPart.add(paragraph);

        createTable(subCatPart);

        document.add(catPart);

        anchor = new Anchor("Second Chapter");
        anchor.setName("Second Chapter");
        catPart = new Chapter(new Paragraph(anchor),1);
        subPara = new Paragraph("Subcategory 2");
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("this is another test phrase"));
        document.add(catPart);
    }

    private static void createTable(Section subCatPart) throws BadElementException{
        PdfPTable table = new PdfPTable(3);
        PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 2"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 3"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        table.addCell("1.0");
        table.addCell("1.1");
        table.addCell("1.2");
        table.addCell("2.1");
        table.addCell("2.2");
        table.addCell("2.3");

        subCatPart.add(table);
    }
    private static void addImage(com.itextpdf.text.Document document, String imgPath) throws DocumentException, java.io.IOException {
        Image img = Image.getInstance(imgPath);
        document.add(new Paragraph("Added image"));
        document.add(img);
    }

    private static void createList(Section subCatPart) {
        List list = new List(true,false,10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
    }


